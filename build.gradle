buildscript {
	ext {
		springBootVersion = '2.7.10'
		springCloudStarterVersion = '3.1.4'
		springSecurityVersion = '5.8.1'
		springRestDocsVersion = '2.0.6.RELEASE'
		snippetsDir = file("build/generated-snippets")
	}
	repositories {
		mavenCentral()
		jcenter()
		maven { url "https://plugins.gradle.org/m2/" }
		maven { url "https://jitpack.io" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.freefair.gradle:lombok-plugin:5.2.1"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'io.freefair.lombok'


sourceCompatibility = 11
targetCompatibility = 11


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	testCompileOnly 'org.projectlombok:lombok:1.18.28'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
}

tasks.named('test') {
	useJUnitPlatform()
}
